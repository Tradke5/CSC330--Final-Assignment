<program> ::= <statement>* ;
<statement> ::= <deposit> | <withdraw> | <check_balance> ;
<deposit> ::= "deposit" <account_number> <amount> ;
<withdraw> ::= "withdraw" <account_number> <amount> ;
<check_balance> ::= "check_balance" <account_number> ;
<first_name> ::= <letter> , {<letter>} ;
<last_name> ::= <letter> , {<letter>} ;
<account_number> ::= <letter> * 2, <digit> * 6 ;  //For account number, the first two letters must be the first letters in first_name and last_name
<balance> ::= <digit> , {<digit>} , { "." , <digit> * 2} ;
<amount> ::= <balance> ; //amount rules are the same as balance rules - can be int or float with two decimal places
<exit> ::= "exit" ;

<symbol> = "[" | "]" | "{" | "}" | "(" | ")" | "<" | ">"
           | "'" | '"' | "=" | "|" | "." | "," | ";" ;
<character> = letter | digit | symbol | "_" ;
     
<identifier> = "<" , letter , { letter | digit | "_" } , ">" ;
<terminal> = "'" , character , { character } , "'" | '"' , character , { character } , '"' ;
<lhs> = identifier ;
<rhs> = identifier
         | terminal
         | "[" , rhs , "]"
         | "{" , rhs , "}"
         | "(" , rhs , ")"
         | rhs , "|" , rhs
         | rhs , "," , rhs ;
     
<rule> = lhs , "=" , rhs , ";" ;
<grammar> = { rule } ;
<digit> ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ;
<letter> ::= "A" | "B" | "C" | "D" | "E" | "F" | "G"
           | "H" | "I" | "J" | "K" | "L" | "M" | "N"
           | "O" | "P" | "Q" | "R" | "S" | "T" | "U"
           | "V" | "W" | "X" | "Y" | "Z" ;
